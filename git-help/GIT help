Чтобы создать ветку и сразу же перейти на неё,
вы можете выполнить команду git checkout с ключом -b:
$ git checkout -b sometask


Переключиться на ветку:
$ git checkout sometask


Посмотреть историю коммитов:
$ git log


Если файл добавлен в гит, и надо почистить кеш,
чтобы игнорить файлы и папки из .gitignore:
git rm -r --cached .
git add .
git commit -m ".gitignore is now working"


Удалить ветку:
$ git branch -d sometask2


Отслеживаемая ветка(git pull/git checkout):
Вы можете настроить отслеживание и других веток удалённого репозитория.
git checkout -b [ветка] [удал. сервер]/[ветка]


При помощи команды rebase вы можете взять все изменения, которые попали
в коммиты на одной из веток, и повторить их на другой.
$ git checkout experiment
$ git rebase master
[не сохраняет историю коммита]


Если после совершения коммита вы осознали, что забыли проиндексировать
изменения в файле, которые хотели добавить в этот коммит,
вы можете сделать что-то подобное:
$ git commit -m 'initial commit'
$ git add forgotten_file
$ git commit --amend


Переключиться на конкретный коммит <commit hash> = 9204d868c...:
git checkout <commit hash>


Если изменения проиндексированы, но еще не добавлены в коммит,
и нужно откатиться до начала текущего коммита:
git reset HEAD <filepath>


!!!HARD RESET: восстановление до последнего коммита,
файлы вернутся в состояние последнего комита(удалятся, добавятся)
МОЖНО ПОТЕРЯТЬ ИЗМЕНЕНИЯ: git reset HEAD --hard





